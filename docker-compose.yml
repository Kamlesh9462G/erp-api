version: '3.8'

services:
  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: 'rootpassword'
      MYSQL_DATABASE: 'ERP'
      MYSQL_USER: 'erp'
      MYSQL_PASSWORD: 'erp@3306'
    ports:
      - '3306:3306'
    volumes:
      - mysql-data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    restart: always

  admin-api:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        APP: admin-api
    ports:
      - '5077:5077'
    environment:
      MYSQL_HOST: mysql
      MYSQL_DB: ERP
      MYSQL_USER: erp
      MYSQL_PASSWORD: erp@3306
    networks:
      - app-network
    depends_on:
      mysql:
        condition: service_healthy
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:5077/health']
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    restart: always

  company-api:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        APP: company-api
    ports:
      - '5078:5078'
    environment:
      MYSQL_HOST: mysql
      MYSQL_DB: ERP
      MYSQL_USER: erp
      MYSQL_PASSWORD: erp@3306
    networks:
      - app-network
    depends_on:
      mysql:
        condition: service_healthy
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:5078/health']
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    restart: always

  nginx:
    image: nginx:alpine
    ports:
      - '80:80'
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
    depends_on:
      - admin-api
      - company-api
    networks:
      - app-network
    restart: always

networks:
  app-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1

volumes:
  ssl-certs:
    driver: local
  mysql-data:
    driver: local